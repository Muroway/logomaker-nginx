# #v1

# # This is a basic workflow to help you get started with Actions

# name: Push To Yandex Cloud CR

# # Controls when the action will run. 
# on:
#   push:
#     branches:
#       - 'main'
#     tags:
#       - 'v*'

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # Runs a single command using the runners shell
#       - name: Yandex Cloud CR "Login" Action for GitHub Actions
#         uses: yc-actions/yc-cr-login@v0.1-alpha
#         with:
#           yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}


#       - name: Build, tag, and push image to Yandex Cloud Container Registry
#         env:
#           CR_REGISTRY: crphve47f826uus3t4li
#           CR_REPOSITORY: logomaker
#           IMAGE_TAG: ${{ github.sha }}
#         run: |
#           docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
#           docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
          
#   deploy:
#       name: Deploy to k8s
#       if: github.ref == 'refs/heads/main' || startsWith(github.event.ref, 'refs/tags/v')
#       #if: github.ref == 'refs/heads/main'
#       needs: build
#       runs-on: ubuntu-latest
#       steps:
#         - name: Set the Kubernetes context
#           uses: azure/k8s-set-context@v2
#           with:
#             method: kubeconfig
#             kubeconfig: ${{ secrets.KUBECONFIG }}
  
#         - name: Checkout source code
#           uses: actions/checkout@v3
  
#         - name: Deploy to the Kubernetes cluster
#           uses: azure/k8s-deploy@v1
#           with:
#             namespace: myapp
#             manifests: manifest.yml
#             images: |
#               cr.yandex/crphve47f826uus3t4li/logomaker:${{ github.sha }}


#testing              

# This is a basic workflow to help you get started with Actions

name: Push To Yandex Cloud CR

# Controls when the action will run. 
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Extract Git Tag
        run: |
          echo "IMAGE_TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "GITHUB_SHA is ${{ github.sha }}"
          echo "GITHUB_REF is ${{ github.ref }}"
          echo "${{ github.event.ref }} - ${{ github.event.ref_type }}"

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crphve47f826uus3t4li
          CR_REPOSITORY: logomaker
         #IMAGE_TAG: ${{ github.sha }}
          IMAGE_TAG: ${{ github.event.ref }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
          
  deploy:
      name: Deploy to k8s      
      if: github.ref == 'refs/heads/main' || startsWith(github.event.ref, 'refs/tags/v')
      #if: github.ref == 'refs/heads/main'
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Set the Kubernetes context
          uses: azure/k8s-set-context@v2
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}
  
        - name: Checkout source code
          uses: actions/checkout@v3
  
        - name: Deploy to the Kubernetes cluster 
          uses: azure/k8s-deploy@v1
          with:
            namespace: myapp
            manifests: manifest.yml
            images: |
              cr.yandex/crphve47f826uus3t4li/logomaker:$IMAGE_TAG
